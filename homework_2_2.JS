undefined + 1;
/*undefined не має числового значення в JS
undefined+1=NaN
Відповідь NaN
 */
'true' == true
/*true=1
'true'=NaN
NaN=1= false
Відповідь False
 */
false == 'false'
/*false=0
'false'=NaN
0=Nan  False
Відповідь False 
*/
null == ''
/*У JavaScript null не є «посиланням на неіснуючий об'єкт» або «нульовим покажчиком»,а ''=0,
null=0  False
Відповідь False
*/
3 ** (9 / 3);
/*Спочатку виконуються операції в дужках:9/3=3
3**3=27
Відповідь 27
 */
!!'false' == !!'true'
/*У JavaScript оператор !! використовується для приведення значення до логічного типу ( boolean),
тоді 'False' залишається false
true=true
false==true  false
Відповідь false
 */
0 || '0' && 1
/*Оператор && має вищий пріоритет, ніж ||. 
'0' && 1 дорівнює 1. 
0 || 1 дорівнює 1.
Відповідь 1
*/
1 < 2 < 3
/*1 < 2 дорівнює true, Що перетворюється на 1 при наступному порівнянні.
 1 < 3 дорівнює true.
 Відповідь True
  */
'foo'+ + +'bar'
/*Оператор + перед рядками перетворює в числа.
'bar'перетворюється на NaN.
Двічі застосований не змінює його значення +NaN
'foo'+ NaN= "fooNaN"
відповідь "fooNaN" 
*/
3 ** 2 / 3;
/*За пріорітетом "**" вище ніж "/", тому
3**2=9
9/3=3
Відповідь 3
 */
1 < 2 > 3
/*1 < 2 дорівнює true, що перетворюється в 1 при наступному порівнянні.
 1 > 3 дорівнює false.
 Відповідь false
  */
(+null == false) < 1;
/*+null= 0.
 0 == false дорівнює true,
  що перетворюється в 1.
   1 < 1 дорівнює false.
   Відповідь false
    */
false && true || true
/*Пріорітет в '&&', тому false && true- false.
false || true- true, оскільки ||означає "АБО", і true робить весь вираз true.
Відповідь true
*/
false && (true || true);
/*Дужки мають пріорітет, тому true || true- true,
false && true- false, оскільки false && будь-яке значення завжди хибне.
 Відповідь false*/
(+null == false) < 1 ** 5;
/*Пріорітет у дужок, 
тому (+null == false), +null=0, 0=false - true
true=1,
1**5=1
1<1 - false
Відповідь false
  */
